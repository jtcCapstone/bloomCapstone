import { Controller, Post, Body, Logger } from '@nestjs/common';
import { LlmService } from '../services/llm.service';

@Controller('llm')
export class LlmController {
  private readonly logger = new Logger(LlmController.name);

  constructor(private readonly llmService: LlmService) {}

  // Endpoint to handle chat requests
  // Expects a message and optional history of previous messages
  // Returns a 'response' generated by the LLM
  @Post('chat')
  async chat(@Body() body: { message: string; history?: string[] }) {
    this.logger.log(
      `Received chat request: ${JSON.stringify({
        message: body.message.substring(0, 25) + '...',
        history: body.history?.length || 0,
      })}`,
    );

    // Response from LLM service. It will handle the message and history
    // and return the generated response as a string
    try {
      const response = await this.llmService.generateResponse(
        body.message,
        body.history || [],
      );

      this.logger.log('Response generated successfully');
      return { response };
    } catch (error) {
      // debugging purposes
      this.logger.error(`Error generating response: ${error.message}`);
      return {
        response: 'Sorry, I encountered an issue processing your request.',
      };
    }
  }
}
